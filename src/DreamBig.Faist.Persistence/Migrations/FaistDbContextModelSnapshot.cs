// <auto-generated />
using System;
using DreamBig.Faist.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DreamBig.Faist.Persistence.Migrations;

[DbContext(typeof(FaistDbContext))]
partial class FaistDbContextModelSnapshot : ModelSnapshot
{
    protected override void BuildModel(ModelBuilder modelBuilder)
    {
#pragma warning disable 612, 618
        modelBuilder
            .HasAnnotation("ProductVersion", "8.0.0")
            .HasAnnotation("Relational:MaxIdentifierLength", 63);

        NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

        modelBuilder.Entity("DreamBig.Faist.Domain.Entities.Task", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uuid");

                b.Property<DateTime>("CreatedAt")
                    .HasColumnType("timestamp with time zone");

                b.Property<string>("Description")
                    .HasMaxLength(500)
                    .HasColumnType("character varying(500)");

                b.Property<bool>("IsCompleted")
                    .HasColumnType("boolean");

                b.Property<Guid?>("ParentTaskId")
                    .HasColumnType("uuid");

                b.Property<string>("Title")
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnType("character varying(100)");

                b.Property<DateTime>("UpdatedAt")
                    .HasColumnType("timestamp with time zone");

                b.Property<Guid>("UserId")
                    .HasColumnType("uuid");

                b.HasKey("Id");

                b.HasIndex("ParentTaskId");

                b.ToTable("Tasks");
            });

        modelBuilder.Entity("DreamBig.Faist.Domain.Entities.Task", b =>
            {
                b.HasOne("DreamBig.Faist.Domain.Entities.Task", "ParentTask")
                    .WithMany("SubTasks")
                    .HasForeignKey("ParentTaskId")
                    .OnDelete(DeleteBehavior.Restrict);

                b.Navigation("ParentTask");
            });

        modelBuilder.Entity("DreamBig.Faist.Domain.Entities.Task", b =>
            {
                b.Navigation("SubTasks");
            });
#pragma warning restore 612, 618
    }
}
